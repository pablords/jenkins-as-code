podTemplate(
    containers: [
        containerTemplate(name: 'nodejs', image: 'node:14-slim', command: 'sleep', args: '99d'),
        containerTemplate(name: 'sonar-scanner', image: 'sonarsource/sonar-scanner-cli', command: 'sleep', args: '99d'),
        containerTemplate(name: 'docker', image: 'docker', command: 'sleep', args: '99d')
    ],
volumes: [hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock')]
)

{

    node(POD_LABEL) {

        stage('BUILD') {
            git 'https://github.com/pablords/member-registration.git'
            container('nodejs') {
                stage('DEPENDENCIAS') {
                    sh 'yarn install'
                }
                stage('TESTES UNITARIOS') {
                    sh 'yarn test'
                }
                stage('COMPILACAO') {
                    sh 'yarn build'
                }
            }
        }
        stage('ANALISE DE CODIGO') {
            container('sonar-scanner') {
                stage('SONAR') {
                    sh '''
                   sonar-scanner \
                      -Dsonar.projectKey=member-registration \
                      -Dsonar.projectBaseDir=./ \
                      -Dsonar.sources=./src \
                      -Dsonar.tests=./__test__ \
                      -Dsonar.language=ts \
                      -Dsonar.sourceEncoding=UTF-8 \
                      -Dsonar.exclusions=**/node_modules/**,build/**,_devops/**,pipeline/** \
                      -Dsonar.junit.reportPaths=junit.xml \
                      -Dsonar.javascript.lcov.reportPaths=sonar/lcov.info \
                      -Dsonar.host.url=http://devops-dev.ddns.net:8082 \
                      -Dsonar.login=71a19e924eaa7d66b153a518b908047b76d19fa8 \
                      -Dsonar.password=
                    '''
                }
            }
        }
        
        stage('PUBLISH') {
            container('nodejs') {
                stage('PUBLICAR ARTEFATO') {
                   sh "npm publish --tag ${env.JOB_NAME}-${env.BUILD_NUMBER}"
                }
            }
        }
        
        stage('BUILD AND PUSH IMAGE') {
            container('docker'){
                script {
                    build job: 'member-registration-package', wait: false, 
                    parameters: [
                         string(name: 'TAG', value: "${env.BUILD_NUMBER}"),
                         string(name: 'JOB', value: "${env.JOB_NAME}")
                    ]
                }
            }
        }
        
    }
}